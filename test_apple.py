#python3

from bleak.backends.scanner import AdvertisementData
from apple_parser import do_apple_decode

test_data = [
    # nearby message
# [ 16,5,11,24,202,47,224],
# [ 16,5,1,152,163,72,230],
# [ 16,5,116,28,21,61,40],
# [ 16,5,1,24,113,109,103],
# [ 16,5,1,24,187,122,55],
# [ 16,5,1,24,27,60,145],
# [ 16,5,124,28,198,44,224],
# [ 16,5,19,24,30,53,190],
# [ 16,5,2,24,102,112,36],
# [ 16,5,31,28,122,238,65],
# [ 16,5,3,24,166,172,195],
# [ 16,5,3,24,186,3,116],
# [ 16,5,41,24,127,41,62],
# [ 16,5,5,24,56,96,150],
# [ 16,5,64,28,40,115,31],
# [ 16,5,65,28,70,89,110],
# [ 16,5,68,28,215,58,62],
# [ 16,5,68,28,59,69,9],
# [ 16,5,71,28,202,47,224],
# [ 16,5,75,28,202,47,224],
# [ 16,5,77,28,89,209,8],
# [ 16,5,78,28,125,162,85],
# [ 16,5,78,28,202,47,224],
# [ 16,5,81,28,168,126,146],
# [ 16,5,87,28,150,95,244],
# [ 16,5,95,28,243,229,190],
# [ 16,6,0,30,156,93,30,153],
# [ 16,6,11,26,138,28,128,185],
# [ 16,6,117,30,225,10,166,241],
# [ 16,6,120,30,141,55,230,131],
# [ 16,6,126,30,2,92,180,233],
# [ 16,6,19,18,153,117,192,195],
# [ 16,6,19,30,229,10,113,128],
# [ 16,6,20,26,89,151,147,29],
# [ 16,6,21,30,183,121,93,201],
# [ 16,6,23,30,11,65,103,74],
# [ 16,6,26,30,229,10,113,128],
# [ 16,6,26,30,235,61,164,211],
# [ 16,6,28,26,101,244,99,35],
# [ 16,6,3,26,174,218,46,105],
# [ 16,6,3,26,255,67,84,83],
# [ 16,6,35,30,196,18,99,131],
# [ 16,6,42,30,2,136,177,173],
# [ 16,6,4,26,80,134,168,41],
# [ 16,6,49,30,137,253,221,128],
# [ 16,6,51,26,229,182,198,192],
# [ 16,6,53,26,12,83,217,227],
# [ 16,6,6,26,135,93,169,49],
# [ 16,6,6,26,14,196,83,26],
# [ 16,6,71,30,234,40,190,108],
# [ 16,6,79,30,21,51,71,113],
# [ 16,6,81,30,166,21,204,76],
# [ 16,6,84,30,249,20,164,53],
# [ 16,7,10,31,4,23,172,26,88],
# [ 16,7,123,31,123,234,209,137,8],
# [ 16,7,126,31,123,234,209,137,8],
# [ 16,7,126,31,86,133,110,10,56],
# [ 16,7,19,31,242,80,169,8,104],
# [ 16,7,19,31,94,249,73,2,8],
# [ 16,7,26,31,128,144,105,55,40],
# [ 16,7,30,31,213,29,169,171,120],
# [ 16,7,35,31,82,156,154,116,72],
# [ 16,7,51,31,123,234,209,137,72],
# [ 16,7,90,31,165,41,167,243,104],

# hand off message
# [ 12,14,0,137,113,236,25,53,233,67,182,192,152,11,206,40],
# [ 12,14,0,22,77,171,58,196,204,149,164,149,38,136,138,161],
# [ 12,14,0,229,76,247,12,225,48,74,246,229,133,50,218,76],
# [ 12,14,0,23,77,31,84,199,27,111,246,43,93,67,196,11],
# [ 12,14,0,254,26,111,218,149,28,250,111,210,174,162,173,254,16,6,105,30,233,85,141,95],
# [ 12,14,0,4,71,158,80,113,186,239,121,134,78,43,134,170,16,5,75,28,202,47,224],
# [ 12,14,0,5,71,75,115,212,235,38,149,2,20,69,245,164,16,5,75,28,202,47,224],
# [ 12,14,0,6,71,236,142,6,90,251,201,125,24,165,132,213,16,5,75,28,202,47,224],
# [ 12,14,0,7,71,65,165,60,58,85,210,242,221,90,220,37,16,5,75,28,202,47,224],
# [ 12,14,0,85,109,221,24,79,110,16,46,206,177,60,238,92,16,6,61,30,95,36,211,7],

# wifi join
# [ 15,5,160,53,187,47,190,16,2,119,12], # this one is anonamlous, maybe two packets

# hey siri
# [ 8,8,255,255,255,2,0,2,82,0], # not a working packet

# unknown ! lots of these - only one packet but lots of times
# [ 18,25,0,165,149,168,85,94,191,33,182,185,190,95,223,76,140,215,213,254,61,74,194,144,203,1,0],

# unknown !
# [ 2,21,226,197,109,181,223,251,72,210,176,96,208,245,167,16,150,224,0,0,0,0,197],
# [ 2,21,80,118,92,183,217,234,78,33,153,164,250,135,150,19,164,146,141,154,239,101,206],

# airpods
# [7, 25, 1, 11, 32, 34, 249, 143, 0, 17, 4, 171, 252, 237, 79, 93, 172, 126, 105, 224, 8, 47, 188, 53, 240, 17, 93],
# [7, 25, 1, 15, 32, 43, 153, 143, 1, 0, 5, 138, 142, 224, 142, 30, 67, 224, 22, 8, 113, 169, 54, 133, 130, 213, 223],
# [7, 25, 1, 6, 32, 0, 246, 143, 0, 8, 0, 192, 110, 116, 205, 168, 109, 111, 116, 3, 29, 195, 253, 96, 52, 2, 134],

# ibeacon
[ '02', '15', '50', '76', '5c', 'b7', 'd9', 'ea', '4e', '21', '99', 'a4', 'fa', '87', '96', '13', 'a4', '92', '8d', '9a', 'ef', '65', 'ce'],

] # end

###########################################################################
## https://stackoverflow.com/a/59128615/7396553
from pprint import pprint
from inspect import getmembers
from types import FunctionType

def attributes(obj):
    disallowed_names = {
      name for name, value in getmembers(type(obj))
        if isinstance(value, FunctionType)}
    return {
      name: getattr(obj, name) for name in dir(obj)
        if name[0] != '_' and name not in disallowed_names and hasattr(obj, name)}

def print_attributes(obj):
    pprint(attributes(obj))
##########################################################################

class DEV:
    details = {
        'ManufacturerData': {}
    }

class AD:
    manufacturer_data: {}

for a in test_data:
    print("-------------------------------------------------------------------------")

    print(f'test a: {type(a)} {type(a[0])} {a[0]}')
    if type(a[0]) != "int":
        # convert hex str list to int list
        z=[]
        for x in a:
            b = int(x,16)
            z.append(b)
        a=z


    device = DEV
    device.details['ManufacturerData'] = { 76: a }

    print(f"test device_details: {device.details['ManufacturerData']}")

    advertisement_data = AD
    advertisement_data.manufacturer_data = { 76: a }
    do_apple_decode(device, advertisement_data)

    print('test print  attr')
    print_attributes(device)
